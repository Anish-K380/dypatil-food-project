import PyQt6.QtWidgets as qtw
from functools import partial
import csv

class node:
    def __init__(self, value, button, number, cbox = None, prev = None, after = None):
        self.val = value
        self.button = button
        self.num = number
        self.checkbox = cbox
        self.left = prev
        self.right = after

class MainWindow(qtw.QMainWindow):
    def __init__(self):
        def turnwhite():self.current_button.setStyleSheet('background-color: white;')
        def turnblue():self.current_button.setStyleSheet('background-color: lightblue;')
        def shift_basic():
            layout2.setCurrentIndex(0)
            turnwhite()
            self.current_button = button_basic
            turnblue()
        def shift_contains():
            layout2.setCurrentIndex(1)
            turnwhite()
            self.current_button = button_contains
            turnblue()
        def shift_diet():
            layout2.setCurrentIndex(2)
            turnwhite()
            self.current_button = button_diet
            turnblue()
        def shift_suitability():
            layout2.setCurrentIndex(3)
            turnwhite()
            self.current_button = button_suitability
            turnblue()
        def create_text(num):
            if len(last_text[num].val.text()) != 0:
                last_text[num].val.returnPressed.disconnect(functions[num])
                last_text[num].right = node(qtw.QLineEdit(), qtw.QPushButton('X'), num)
                last_text[num].right.left = last_text[num]
                last_text[num] = last_text[num].right
                text_layouts[num].addWidget(last_text[num].val)
                button_layouts[num].addWidget(last_text[num].button)
                last_text[num].val.returnPressed.connect(functions[num])
                last_text[num].val.setFocus()
                texts[self.button_id] = last_text[num]
                groups[num].addButton(last_text[num].button, self.button_id)
                self.button_id += 1
                last_text[num].val.setMinimumWidth(200)
                last_text[num].button.setMaximumWidth(50)
                if num == 5:
                    last_text[5].checkbox = qtw.QCheckBox('Good')
                    disease_check.addWidget(last_text[5].checkbox)
        def delete_text(button_id):
            text = texts[button_id]
            num = text.num
            if last_text[num].left == None:
                text.val.clear()
                if num == 5:text.checkbox.setChecked(False)
                return None
            if text.right == None:
                last_text[num] = text.left
                text.left.right = None
                text.left.val.returnPressed.connect(functions[num])
            else:text.right.left = text.left
            if text.left != None:text.left.right = text.right
            text.val.setParent(None)
            text.button.setParent(None)
            text.val.deleteLater()
            text.button.deleteLater()
            texts.pop(button_id)
            if num == 5:text.checkbox.setParent(None)
        def anchor():
            temp = qtw.QWidget()
            temp.setFixedHeight(0)
            temp.setFixedWidth(0)
            return temp
        def clear():
            basic_category.setExclusive(False)
            name.clear()
            veg.setChecked(False)
            egg.setChecked(False)
            nonveg.setChecked(False)
            age_lower_limit.setValue(0)
            age_upper_limit.setValue(0)
            calories.setValue(0.0)
            quantity.setValue(0.0)
            gm.setChecked(True)
            description.clear()
            basic_category.setExclusive(True)
            for i in tuple(texts.keys()):delete_text(i)
        def name_error(error):
            error_text.setText(errors[error])
            error_header.show()
            error_text.show()
            button_error.show()
            if error < 4:shift_basic()
            elif error < 6:shift_contains()
            return None
        def hide_error():
            error_header.hide()
            error_text.hide()
            button_error.hide()
        def submit():
            data = [name.text()]
            if len(data[0]) == 0:return name_error(0)
            if (veg.isChecked() or egg.isChecked() or nonveg.isChecked()):data.append(int(egg.isChecked()) + (int(nonveg.isChecked()) << 1))
            else:return name_error(1)
            data.append(age_lower_limit.value())
            data.append(age_upper_limit.value())
            if (data[3] == 0) or (data[2] > data[3]):data[2], data[3] = 0, 200
            data.append(calories.value())
            data.append(quantity.value())
            if data[5] == 0:name_error(2)
            data.append(int(mg.isChecked()))
            data.append(description.toPlainText())
            if len(data[7]) == 0:return name_error(3)
            for i in range(7):
                element = last_text[i]
                container = list()
                while element != None:
                    container.append(element.val.text())
                    if container[-1] == '':container.pop()
                    element = element.left
                data.append('`'.join(container))
            if len(data[8]) == 0:name_error(4)
            if len(data[9]) == 0:name_error(5)
            element = last_text[5]
            container = list()
            while (element != None):
                if len(element.val.text()) != 0:container.append(str(int(element.checkbox.isChecked())))
                element = element.left
            data.append(''.join(container))
            clear()
            shift_basic()
        def example():
            name.setText('Paneer Butter Masala')
            veg.setChecked(True)
            age_lower_limit_.setValue(0)
            age_upper_limit.setValue(60)
            calories.setValue(400)
            description.setPlainText('Protein: 12 - 15 gms\nFat: 25 - 30 gms\nCarbohydrates: 10-15 gms\nFiber: 2-3 gms')

        super().__init__()
        errors = ('Enter name', 'Select veg/egg/non-veg', 'Check quantity', 'Enter description', 'Fill nutrients', 'Fill ingredients', )
        layout = qtw.QHBoxLayout() #master layout

        layout1 = qtw.QVBoxLayout()  #contains buttons and open space
        layout1_ = qtw.QVBoxLayout() #the empty space
        button_layout = qtw.QVBoxLayout() #contains the buttons

        layout2 = qtw.QStackedLayout() #will contain the content
        window_basic = qtw.QWidget()
        window_contains = qtw.QWidget()
        window_diet = qtw.QWidget()
        window_suitability = qtw.QWidget()
        layouta = qtw.QVBoxLayout()
        layoutb = qtw.QHBoxLayout()
        layoutc = qtw.QHBoxLayout()
        layoutd = qtw.QHBoxLayout()

        button_example = qtw.QPushButton('example')
        button_basic = qtw.QPushButton('basic')
        button_contains = qtw.QPushButton('contains')
        button_diet = qtw.QPushButton('diet')
        button_suitability = qtw.QPushButton('suitablitiy')
        button_submit = qtw.QPushButton('submit')
        error_header_layout = qtw.QHBoxLayout()
        error_text_layout = qtw.QHBoxLayout()
        error_header = qtw.QLabel('Error')
        error_text = qtw.QLabel('')
        error_header.hide()
        error_text.hide()
        error_header_layout.addStretch(1)
        error_header_layout.addWidget(error_header)
        error_header_layout.addStretch(1)
        error_text_layout.addStretch(1)
        error_text_layout.addWidget(error_text)
        error_text_layout.addStretch(1)
        button_error = qtw.QPushButton('OK')
        button_error.hide()
        button_clear = qtw.QPushButton('clear')
        button_exit = qtw.QPushButton('exit')

        self.current_button = button_basic
        turnblue()

        button_exit.clicked.connect(app.quit)

        button_layout.addWidget(button_example)
        button_layout.addStretch(1)
        button_layout.addWidget(button_basic)
        button_layout.addWidget(button_contains)
        button_layout.addWidget(button_diet)
        button_layout.addWidget(button_suitability)
        button_layout.addStretch(2)
        button_layout.addWidget(button_submit)
        button_layout.addStretch(2)
        button_layout.addLayout(error_header_layout)
        button_layout.addLayout(error_text_layout)
        button_layout.addWidget(button_error)
        button_layout.addStretch(2)
        button_layout.addWidget(button_clear)
        button_layout.addStretch(2)
        button_layout.addWidget(button_exit)
        button_layout.addStretch(1)

        layoutname = qtw.QHBoxLayout()
        layoutname.addStretch(1)
        layoutname.addWidget(qtw.QLabel('name:'))    #Basic page
        name = qtw.QLineEdit()
        name.setMinimumWidth(300)
        layoutname.addWidget(name)
        layoutname.addStretch(1)
        layouta.addLayout(layoutname)
        layouta.addStretch(1)
        category_widget = qtw.QWidget()
        category_layout = qtw.QHBoxLayout()
        category_order = qtw.QVBoxLayout()
        category_layout.addStretch(1)
        basic_category = qtw.QButtonGroup()
        veg = qtw.QRadioButton('Veg')
        nonveg = qtw.QRadioButton('Non-veg')
        egg = qtw.QRadioButton('Egg')
        basic_category.addButton(veg, 0)
        basic_category.addButton(egg, 1)
        basic_category.addButton(nonveg, 2)
        category_order.addWidget(veg)
        category_order.addWidget(egg)
        category_order.addWidget(nonveg)
        category_layout.addLayout(category_order)
        category_layout.addStretch(1)
        category_widget.setLayout(category_layout)
        layouta.addWidget(category_widget)
        layoutage = qtw.QHBoxLayout()
        layouta.addStretch(1)
        layoutage.addStretch(2)
        layoutage.addWidget(qtw.QLabel('Age Lower Limit:'))
        age_lower_limit = qtw.QSpinBox()
        age_lower_limit.setMinimum(0)
        age_lower_limit.setMaximum(200)
        layoutage.addWidget(age_lower_limit)
        layoutage.addStretch(1)
        layoutage.addWidget(qtw.QLabel('Age Upper Limit:'))
        age_upper_limit = qtw.QSpinBox()
        age_upper_limit.setMinimum(0)
        age_upper_limit.setMaximum(200)
        layoutage.addWidget(age_upper_limit)
        layoutage.addStretch(2)
        layouta.addLayout(layoutage)
        layouta.addStretch(1)
        layoutcalories = qtw.QHBoxLayout()
        layoutcalories.addStretch(1)
        layoutcalories.addWidget(qtw.QLabel('Calories:'))
        calories = qtw.QDoubleSpinBox()
        calories.setMaximum(1000)
        layoutcalories.addWidget(calories)
        layoutcalories.addWidget(qtw.QLabel('kcal/100gm'))
        layoutcalories.addStretch(1)
        layouta.addLayout(layoutcalories)
        layouta.addStretch(1)
        layoutquantity = qtw.QHBoxLayout()
        layoutquantity.addStretch(1)
        layoutquantity.addWidget(qtw.QLabel('Ideal quantity per serving:'))
        quantity = qtw.QDoubleSpinBox()
        quantity.setMaximum(2000)
        layoutquantity.addWidget(quantity)
        quantity_widget = qtw.QWidget()
        quantityunit = qtw.QVBoxLayout()
        gm = qtw.QRadioButton('gms')
        mg = qtw.QRadioButton('mg')
        quantitygroup = qtw.QButtonGroup()
        gm.setChecked(True)
        quantitygroup.addButton(gm, 0)
        quantitygroup.addButton(mg, 1)
        quantityunit.addWidget(gm)
        quantityunit.addWidget(mg)
        quantity_widget.setLayout(quantityunit)
        layoutquantity.addWidget(quantity_widget)
        layoutquantity.addStretch(1)
        layouta.addLayout(layoutquantity)
        layouta.addStretch(1)
        description_layout = qtw.QHBoxLayout()
        description_layout.addStretch(1)
        description_layout.addWidget(qtw.QLabel('Description'))
        description = qtw.QTextEdit()
        description.setMinimumHeight(300)
        description.setMinimumWidth(500)
        description_layout.addWidget(description)
        description_layout.addStretch(1)
        layouta.addLayout(description_layout)
        next_button = qtw.QPushButton('next')
        next_button.clicked.connect(shift_contains)
        next_layout = qtw.QHBoxLayout()
        next_layout.addStretch(4)
        next_layout.addWidget(next_button)
        next_layout.addStretch(1)
        layouta.addLayout(next_layout)
        layouta.addStretch(2)

        last_text = list()
        text_layouts = list()
        functions = list()
        button_layouts = list()
        groups = list()
        texts = dict()
        self.button_id = 7

        nutrient_layout = qtw.QVBoxLayout()
        ingredient_layout = qtw.QVBoxLayout()
        nutrient_header = qtw.QHBoxLayout()
        ingredient_header = qtw.QHBoxLayout()
        nutrient_header.addStretch(1)
        ingredient_header.addStretch(1)
        nutrient_header.addWidget(qtw.QLabel('Nutrients'))
        ingredient_header.addWidget(qtw.QLabel('Ingredients'))               #contains page
        nutrient_header.addStretch(1)
        ingredient_header.addStretch(1)
        nutrient_layout.addLayout(nutrient_header)
        ingredient_layout.addLayout(ingredient_header)
        nutrient_layout.addStretch(1)
        ingredient_layout.addStretch(1)
        nutrient_content = qtw.QHBoxLayout()
        ingredient_content = qtw.QHBoxLayout()
        nutrient_content.addStretch(1)
        ingredient_content.addStretch(1)
        nutrient_text = qtw.QVBoxLayout()
        ingredient_text = qtw.QVBoxLayout()
        nutrient_button = qtw.QVBoxLayout()
        ingredient_button = qtw.QVBoxLayout()
        nutrient_text.addWidget(anchor())
        ingredient_text.addWidget(anchor())
        nutrient_button.addWidget(anchor())
        ingredient_button.addWidget(anchor())
        last_text.append(node(qtw.QLineEdit(), qtw.QPushButton('X'), 0))
        last_text.append(node(qtw.QLineEdit(), qtw.QPushButton('X'), 1))
        texts[0] = last_text[0]
        texts[1] = last_text[1]
        text_layouts.append(nutrient_text)
        text_layouts.append(ingredient_text)
        button_layouts.append(nutrient_button)
        button_layouts.append(ingredient_button)
        functions.append(partial(create_text, 0))
        functions.append(partial(create_text, 1))
        groups.append(qtw.QButtonGroup())
        groups.append(qtw.QButtonGroup())
        groups[0].addButton(texts[0].button, 0)
        groups[1].addButton(texts[1].button, 1)
        groups[0].idClicked.connect(delete_text)
        groups[1].idClicked.connect(delete_text)
        texts[0].val.returnPressed.connect(functions[0])
        texts[1].val.returnPressed.connect(functions[1])
        nutrient_text.addWidget(texts[0].val)
        ingredient_text.addWidget(texts[1].val)
        nutrient_button.addWidget(texts[0].button)
        ingredient_button.addWidget(texts[1].button)
        nutrient_content.addLayout(nutrient_text)
        ingredient_content.addLayout(ingredient_text)
        nutrient_content.addLayout(nutrient_button)
        ingredient_content.addLayout(ingredient_button)
        nutrient_content.addStretch(1)
        ingredient_content.addStretch(1)
        nutrient_layout.addLayout(nutrient_content)
        ingredient_layout.addLayout(ingredient_content)
        nutrient_layout.addStretch(4)
        ingredient_layout.addStretch(4)
        layoutb.addLayout(nutrient_layout)
        layoutb.addStretch(8)
        layoutb.addLayout(ingredient_layout)
        layoutb.addStretch(3)
        next_layout = qtw.QVBoxLayout()
        next_layout.addStretch(87)
        next_button = qtw.QPushButton('next')
        next_button.clicked.connect(shift_diet)
        next_layout.addWidget(next_button)
        next_layout.addStretch(13)
        layoutb.addLayout(next_layout)
        layoutb.addStretch(4)

        bt_layout = qtw.QVBoxLayout()
        diet_layout = qtw.QVBoxLayout()
        btte_layout = qtw.QVBoxLayout()
        bt_header = qtw.QHBoxLayout()
        diet_header = qtw.QHBoxLayout()
        btte_header = qtw.QHBoxLayout()
        bt_header.addStretch(1)
        diet_header.addStretch(1)
        btte_header.addStretch(1)
        bt_header.addWidget(qtw.QLabel('Body Type'))
        diet_header.addWidget(qtw.QLabel('Diet'))
        btte_header.addWidget(qtw.QLabel('Best time to eat'))                #diet page
        bt_header.addStretch(1)
        diet_header.addStretch(1)
        btte_header.addStretch(1)
        bt_layout.addLayout(bt_header)
        diet_layout.addLayout(diet_header)
        btte_layout.addLayout(btte_header)
        bt_layout.addStretch(1)
        diet_layout.addStretch(1)
        btte_layout.addStretch(1)
        bt_content = qtw.QHBoxLayout()
        diet_content = qtw.QHBoxLayout()
        btte_content = qtw.QHBoxLayout()
        bt_content.addStretch(1)
        diet_content.addStretch(1)
        btte_content.addStretch(1)
        bt_text = qtw.QVBoxLayout()
        diet_text = qtw.QVBoxLayout()
        btte_text = qtw.QVBoxLayout()
        bt_text.addWidget(anchor())
        diet_text.addWidget(anchor())
        btte_text.addWidget(anchor())
        bt_button = qtw.QVBoxLayout()
        diet_button = qtw.QVBoxLayout()
        btte_button = qtw.QVBoxLayout()
        bt_button.addWidget(anchor())
        diet_button.addWidget(anchor())
        btte_button.addWidget(anchor())
        last_text.append(node(qtw.QLineEdit(), qtw.QPushButton('X'), 2))
        last_text.append(node(qtw.QLineEdit(), qtw.QPushButton('X'), 3))
        last_text.append(node(qtw.QLineEdit(), qtw.QPushButton('X'), 4))
        texts[2] = last_text[2]
        texts[3] = last_text[3]
        texts[4] = last_text[4]
        text_layouts.append(bt_text)
        text_layouts.append(diet_text)
        text_layouts.append(btte_text)
        button_layouts.append(bt_button)
        button_layouts.append(diet_button)
        button_layouts.append(btte_button)
        functions.append(partial(create_text, 2))
        functions.append(partial(create_text, 3))
        functions.append(partial(create_text, 4))
        groups.append(qtw.QButtonGroup())
        groups.append(qtw.QButtonGroup())
        groups.append(qtw.QButtonGroup())
        groups[2].addButton(last_text[2].button, 2)
        groups[3].addButton(last_text[3].button, 3)
        groups[4].addButton(last_text[4].button, 4)
        groups[2].idClicked.connect(delete_text)
        groups[3].idClicked.connect(delete_text)
        groups[4].idClicked.connect(delete_text)
        last_text[2].val.returnPressed.connect(functions[2])
        last_text[3].val.returnPressed.connect(functions[3])
        last_text[4].val.returnPressed.connect(functions[4])
        bt_text.addWidget(last_text[2].val)
        diet_text.addWidget(last_text[3].val)
        btte_text.addWidget(last_text[4].val)
        bt_button.addWidget(last_text[2].button)
        diet_button.addWidget(last_text[3].button)
        btte_button.addWidget(last_text[4].button)
        bt_content.addLayout(bt_text)
        diet_content.addLayout(diet_text)
        btte_content.addLayout(btte_text)
        bt_content.addLayout(bt_button)
        diet_content.addLayout(diet_button)
        btte_content.addLayout(btte_button)
        bt_content.addStretch(1)
        diet_content.addStretch(1)
        btte_content.addStretch(1)
        bt_layout.addLayout(bt_content)
        diet_layout.addLayout(diet_content)
        btte_layout.addLayout(btte_content)
        bt_layout.addStretch(4)
        diet_layout.addStretch(4)
        btte_layout.addStretch(4)
        layoutc.addLayout(bt_layout)
        layoutc.addStretch(4)
        layoutc.addLayout(diet_layout)
        layoutc.addStretch(4)
        layoutc.addLayout(btte_layout)
        layoutc.addStretch(2)
        next_layout = qtw.QVBoxLayout()
        next_layout.addStretch(87)
        next_button = qtw.QPushButton('next')
        next_button.clicked.connect(shift_suitability)
        next_layout.addWidget(next_button)
        next_layout.addStretch(13)
        layoutc.addLayout(next_layout)
        layoutc.addStretch(5)
        
        disease_layout = qtw.QVBoxLayout()
        allergy_layout = qtw.QVBoxLayout()
        disease_header = qtw.QHBoxLayout()
        allergy_header = qtw.QHBoxLayout()
        disease_header.addStretch(1)
        allergy_header.addStretch(1)
        disease_header.addWidget(qtw.QLabel('Disease'))                #suitability page
        allergy_header.addWidget(qtw.QLabel('Allergy'))
        disease_header.addStretch(1)
        allergy_header.addStretch(1)
        disease_layout.addLayout(disease_header)
        allergy_layout.addLayout(allergy_header)
        disease_layout.addStretch(1)
        allergy_layout.addStretch(1)
        disease_content = qtw.QHBoxLayout()
        allergy_content = qtw.QHBoxLayout()
        disease_content.addStretch(1)
        allergy_content.addStretch(1)
        disease_text = qtw.QVBoxLayout()
        allergy_text = qtw.QVBoxLayout()
        disease_button = qtw.QVBoxLayout()
        allergy_button = qtw.QVBoxLayout()
        disease_check = qtw.QVBoxLayout()
        disease_text.addWidget(anchor())
        allergy_text.addWidget(anchor())
        disease_button.addWidget(anchor())
        allergy_button.addWidget(anchor())
        disease_check.addWidget(anchor())
        last_text.append(node(qtw.QLineEdit(), qtw.QPushButton('X'), 5, qtw.QCheckBox('Good')))
        last_text.append(node(qtw.QLineEdit(), qtw.QPushButton('X'), 6))
        texts[5] = last_text[5]
        texts[6] = last_text[6]
        text_layouts.append(disease_text)
        text_layouts.append(allergy_text)
        button_layouts.append(disease_button)
        button_layouts.append(allergy_button)
        functions.append(partial(create_text, 5))
        functions.append(partial(create_text, 6))
        groups.append(qtw.QButtonGroup())
        groups.append(qtw.QButtonGroup())
        groups[5].idClicked.connect(delete_text)
        groups[6].idClicked.connect(delete_text)
        texts[5] = last_text[5]
        texts[6] = last_text[6]
        texts[5].val.returnPressed.connect(functions[5])
        texts[6].val.returnPressed.connect(functions[6])
        groups[5].addButton(texts[5].button, 5)
        groups[6].addButton(texts[6].button, 6)
        disease_text.addWidget(texts[5].val)
        allergy_text.addWidget(texts[6].val)
        disease_button.addWidget(texts[5].button)
        allergy_button.addWidget(texts[6].button)
        disease_check.addWidget(texts[5].checkbox)
        disease_content.addLayout(disease_text)
        allergy_content.addLayout(allergy_text)
        disease_content.addLayout(disease_check)
        allergy_content.addLayout(allergy_button)
        disease_content.addLayout(disease_button)
        disease_content.addStretch(1)
        allergy_content.addStretch(1)
        disease_layout.addLayout(disease_content)
        allergy_layout.addLayout(allergy_content)
        disease_layout.addStretch(4)
        allergy_layout.addStretch(4)
        layoutd.addLayout(disease_layout)
        layoutd.addLayout(allergy_layout)

        window_basic.setLayout(layouta)
        window_contains.setLayout(layoutb)
        window_diet.setLayout(layoutc)
        window_suitability.setLayout(layoutd)

        for i in range(7):
            last_text[i].val.setMinimumWidth(200)
            last_text[i].button.setMaximumWidth(50)

        layout1.addLayout(button_layout, stretch = 3)   #space taken by buttons in tabs bar
        layout1.addLayout(layout1_, stretch = 1)

        layout2.addWidget(window_basic)
        layout2.addWidget(window_contains)
        layout2.addWidget(window_diet)
        layout2.addWidget(window_suitability)

        button_example.clicked.connect(example)
        button_basic.clicked.connect(shift_basic)
        button_contains.clicked.connect(shift_contains)
        button_diet.clicked.connect(shift_diet)
        button_suitability.clicked.connect(shift_suitability)
        button_error.clicked.connect(hide_error)
        button_clear.clicked.connect(clear)
        button_submit.clicked.connect(submit)

        layout.addLayout(layout1, stretch = 1)       #space taken by content and tab bar
        layout.addLayout(layout2, stretch = 7)

        widget = qtw.QWidget()
        widget.setLayout(layout)
        self.setCentralWidget(widget)

app = qtw.QApplication([])
window = MainWindow()
window.show()
app.exec()
